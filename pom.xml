<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>dfa1</groupId>
	<artifactId>hosh</artifactId>
	<version>0.1.0-SNAPSHOT</version>
	<url>https://github.com/dfa1/hosh</url>
	<name>hosh</name>
	<description>The Human Oriented SHell</description>
	<inceptionYear>2018</inceptionYear>
	<licenses>
		<license>
			<name>MIT License</name>
			<url>http://www.opensource.org/licenses/mit</url>
			<distribution>repo</distribution>
		</license>
	</licenses>
	<developers>
		<developer>
			<id>dfa</id>
			<name>Davide Angelocola</name>
			<email>davide.angelocola+hosh@gmail.com</email>
			<url>https://dfa1.github.io</url>
			<timezone>Europe/Zurich</timezone>
		</developer>
	</developers>
	<scm>
		<developerConnection>scm:git:.</developerConnection>
		<tag>HEAD</tag>
	</scm>
	<distributionManagement>
		<repository>
			<id>github</id>
			<name>GitHub Packages</name>
			<url>https://maven.pkg.github.com/dfa1/hosh</url>
		</repository>
	</distributionManagement>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>
	<dependencies>
		<dependency>
			<groupId>commons-cli</groupId>
			<artifactId>commons-cli</artifactId>
			<version>1.4</version>
		</dependency>
		<dependency>
			<groupId>org.jline</groupId>
			<artifactId>jline-terminal</artifactId>
			<version>3.13.3</version>
		</dependency>
		<dependency>
			<groupId>org.jline</groupId>
			<artifactId>jline-terminal-jansi</artifactId>
			<version>3.13.3</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.jline</groupId>
			<artifactId>jline-reader</artifactId>
			<version>3.13.3</version>
		</dependency>
		<dependency>
			<groupId>org.antlr</groupId>
			<artifactId>antlr4-runtime</artifactId>
			<version>4.8-1</version>
		</dependency>
		<!-- testing -->
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter</artifactId>
			<version>5.6.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>3.3.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-junit-jupiter</artifactId>
			<version>3.3.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>nl.jqno.equalsverifier</groupId>
			<artifactId>equalsverifier</artifactId>
			<version>3.1.12</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-core</artifactId>
			<version>3.15.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.tngtech.archunit</groupId>
			<artifactId>archunit</artifactId>
			<version>0.13.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.tngtech.archunit</groupId>
			<artifactId>archunit-junit5-api</artifactId>
			<version>0.13.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.tngtech.archunit</groupId>
			<artifactId>archunit-junit5-engine</artifactId>
			<version>0.13.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.quicktheories</groupId>
			<artifactId>quicktheories</artifactId>
			<version>0.26</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-simple</artifactId>
			<version>1.7.30</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
	<build>
		<finalName>hosh</finalName>
		<plugins>
			<plugin>
				<groupId>org.antlr</groupId>
				<artifactId>antlr4-maven-plugin</artifactId>
				<version>4.8-1</version>
				<configuration>
					<treatWarningsAsErrors>true</treatWarningsAsErrors>
				</configuration>
				<executions>
					<execution>
						<id>antlr</id>
						<goals>
							<goal>antlr4</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.8.1</version>
				<configuration>
					<source>11</source>
					<target>11</target>
					<showDeprecation>true</showDeprecation>
					<showWarnings>true</showWarnings>
					<useIncrementalCompilation>false</useIncrementalCompilation>
					<staleMillis>1</staleMillis>
					<compilerArgs>
						<arg>-Xlint:all</arg>
						<arg>-Xlint:-requires-automatic</arg>
						<arg>-Xpkginfo:always</arg>
						<arg>--add-exports</arg>
						<arg>java.base/jdk.internal.misc=hosh</arg>
					</compilerArgs>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>3.0.0</version>
				<executions>
					<execution>
						<id>add-source</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>${project.build.directory}/generated-sources/antlr4</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>pl.project13.maven</groupId>
				<artifactId>git-commit-id-plugin</artifactId>
				<version>4.0.0</version>
				<executions>
					<execution>
						<id>fetch-git-revision</id>
						<goals>
							<goal>revision</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<generateGitPropertiesFile>true</generateGitPropertiesFile>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>3.1.0</version>
				<executions>
					<execution>
						<id>copy-resources</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${basedir}/target/classes</outputDirectory>
							<resources>
								<resource>
									<directory>${basedir}</directory>
									<include>*.md</include>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>3.2.0</version>
				<configuration>
					<descriptorRefs>
						<descriptorRef>jar-with-dependencies</descriptorRef>
					</descriptorRefs>
					<archive>
						<manifestFile>src/main/resources/META-INF/MANIFEST.MF</manifestFile>
					</archive>
					<attach>true</attach>
					<appendAssemblyId>false</appendAssemblyId>
					<outputDirectory>${project.build.directory}/dist</outputDirectory>
				</configuration>
				<executions>
					<execution>
						<id>assemble-all</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.22.2</version>
				<configuration>
					<redirectTestOutputToFile>true</redirectTestOutputToFile>
					<trimStackTrace>false</trimStackTrace>
					<argLine>--add-exports java.base/jdk.internal.misc=hosh</argLine>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>2.22.2</version>
				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<trimStackTrace>false</trimStackTrace>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.pitest</groupId>
				<artifactId>pitest-maven</artifactId>
				<version>1.5.0</version>
				<configuration>
					<targetClasses>
						<param>hosh.*</param>
					</targetClasses>
					<targetTests>
						<param>hosh.*</param>
					</targetTests>
					<excludedClasses>
						<param>hosh.antlr4.*</param>
					</excludedClasses>
					<excludedTestClasses>
						<param>hosh.integration.*</param>
						<param>hosh.runtime.PipelineCommandTest</param>
						<param>hosh.runtime.PipelineChannelTest</param>
					</excludedTestClasses>
					<threads>2</threads>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>org.pitest</groupId>
						<artifactId>pitest-junit5-plugin</artifactId>
						<version>0.12</version>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<version>3.0.0-M3</version>
				<executions>
					<execution>
						<id>enforce-no-repositories</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<rules>
								<requireMavenVersion>
									<version>3.6.0</version>
								</requireMavenVersion>
								<requireNoRepositories/>
								<requireReleaseDeps/>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>3.1.1</version>
				<executions>
					<execution>
						<phase>validate</phase>
						<goals>
							<goal>check</goal>
						</goals>
						<configuration>
							<configLocation>checkstyle.xml</configLocation>
							<failsOnError>true</failsOnError>
							<consoleOutput>true</consoleOutput>
							<sourceDirectories>
								<sourceDirectory>src/main/java</sourceDirectory>
							</sourceDirectories>
							<excludes>**/module-info.java</excludes>
						</configuration>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>com.puppycrawl.tools</groupId>
						<artifactId>checkstyle</artifactId>
						<version>8.29</version>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<groupId>com.mycila</groupId>
				<artifactId>license-maven-plugin</artifactId>
				<version>3.0</version>
				<inherited>false</inherited>
				<configuration>
					<header>${project.basedir}/LICENSE.md</header>
					<aggregate>true</aggregate>
					<failIfMissing>true</failIfMissing>
					<encoding>${project.build.sourceEncoding}</encoding>
					<includes>
						<include>**/main/java/**/*.java</include>
						<include>**/test/java/**/*.java</include>
					</includes>
					<strictCheck>true</strictCheck>
					<mapping>
						<java>SLASHSTAR_STYLE</java>
					</mapping>
				</configuration>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>format</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>3.2.0</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<version>3.0.0-M1</version>
				<configuration>
					<goals>clean deploy</goals>
					<localCheckout>true</localCheckout>
					<tagNameFormat>v@{project.version}</tagNameFormat>
				</configuration>
			</plugin>
		</plugins>
	</build>
	<profiles>
		<profile>
			<id>gpg</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-gpg-plugin</artifactId>
						<version>1.6</version>
						<executions>
							<execution>
								<id>sign-artifacts</id>
								<phase>verify</phase>
								<goals>
									<goal>sign</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>sonar</id>
			<properties>
				<sonar.coverage.jacoco.xmlReportPaths>target/site/jacoco/jacoco.xml,target/site/jacoco-it/jacoco.xml
				</sonar.coverage.jacoco.xmlReportPaths>
				<sonar.exclusions>target/generated-sources/**</sonar.exclusions>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.sonarsource.scanner.maven</groupId>
						<artifactId>sonar-maven-plugin</artifactId>
						<version>3.7.0.1746</version>
					</plugin>
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
						<version>0.8.5</version>
						<executions>
							<execution>
								<id>agent-for-unit-tests</id>
								<goals>
									<goal>prepare-agent</goal>
								</goals>
								<phase>process-test-classes</phase>
								<configuration>
									<destFile>${sonar.jacoco.reportPath}</destFile>
								</configuration>
							</execution>
							<execution>
								<id>agent-for-integration-tests</id>
								<goals>
									<goal>prepare-agent-integration</goal>
								</goals>
								<phase>pre-integration-test</phase>
								<configuration>
									<destFile>${sonar.jacoco.itReportPath}</destFile>
								</configuration>
							</execution>
							<execution>
								<id>report</id>
								<goals>
									<goal>report</goal>
									<goal>report-integration</goal>
								</goals>
								<phase>post-integration-test</phase>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>docker</id>
			<build>
				<plugins>
					<plugin>
						<groupId>com.spotify</groupId>
						<artifactId>dockerfile-maven-plugin</artifactId>
						<version>1.4.13</version>
						<executions>
							<execution>
								<id>default</id>
								<goals>
									<goal>build</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<repository>hosh</repository>
							<tag>${project.version}</tag>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
